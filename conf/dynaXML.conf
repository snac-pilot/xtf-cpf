<?xml version="1.0" encoding="utf-8"?>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- Configuration file for the dynaXML dynamic publishing servlet.         -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<dynaXML-config>

    <!-- =====================================================================
         Tag:     <logging level="xxx"/>
         
         Descrip: Controls how much detail to output. xxx can be one of:
                     silent:   No logging
                     errors:   Log servlet restarts and errors
                     warnings: Log restarts, errors, and warnings
                     info:     Normal. Log all above, plus routine info msgs
                     debug:    Verbose. Log all above, plus debug msgs
    -->
    
    <logging level="info"/>


    <!-- =====================================================================
        Tag:     <reverseProxy IP="aaa.bbb.ccc.ddd" {marker="X"}/>

        Descrip: If IP-based authentication is used with a reverse proxy, the
                 servlet will need to be able to determine the requestor's real
                 IP address. It can do this by detecting the reverse proxy's IP
                 and then parsing the X-Forwarded-For marker (an alternate
                 marker may be specified using the 'marker' attribute).
    -->

    <!-- texts-dev.cdlib.org -->
    <!-- reverseProxy IP="128.48.200.205" marker="X-CDL-Forwarded-For"/ -->

    <!-- texts-stage.cdlib.org -->
    <reverseProxy IP="128.48.200.206" marker="X-CDL-Forwarded-For"/>

    <!-- texts.cdlib.org -->
    <!-- reverseProxy IP="128.48.120.81" marker="X-CDL-Forwarded-For"/ -->


    <!-- =====================================================================
         Tag:     <docReqParser path="xxx" params="yyy"/>

         Descrip: When a request is made for a particular document (by
                  specifying docId or somesuch in the URL), dynaXML will run
                  the docRequestParser (an XSLT stylesheet) to obtain the
                  the source path, formatter stylesheet, branding profile, and
                  authentication info for that document.

                  The path is interpreted relative to the servlet's base
                  directory.

                  Names of URL parameters that should be passed to the
                  docRequestParser. For reasons of cache efficiency, this
                  set should be kept to the minimum necessary to get the
                  job done.

                  Each parameter will be passed in tokenized and untokenized
                  form, just like parameters to crossQuery's queryParser.

                  See descriptive comments in docReqParser.xsl for details.
    -->

    <docReqParser path="style/dynaXML/docReqParser.xsl" 
                  params="docId,query,query-exclude,query-join,query-prox,sectionType"/>


    <!-- =====================================================================
         Tag:     <errorGen path="xxx"/>

         Descrip: When an error occurs (either authorization or an internal
                  error), a stylesheet is used to produce a nicely formatted
                  page for the requestor.

                  This tag specifies the path to the stylesheet, relative to
                  the servlet base directory.

                  See detailed comments in errorGen.xsl for more info.
    -->

    <errorGen path="style/dynaXML/errorGen.xsl"/>


    <!-- =====================================================================
         Tags:    <stylesheetCache size="X" expire="Y">
                  <reqParserCache size="X" expire="Y">
                  <ipListCache size="X" expire="Y"/>
                  <authCache size="X" expire="Y"/>
                  <loginCache size="X" expire="Y"/>

         Descrip: These attributes (if specified) override the defaults for
                  the size (number of entries) and expiration (in seconds) for
                  the various caches maintained by the servlet. Generally these
                  need not be changed.

                  Here is what each cache contains:

                  stylesheetCache  Compiled versions of stylesheets (request
                                   parser, doc formatter, etc.)

                  reqParserCache   Parsed requests for specific URLs, to avoid
                                   running the request parser stylesheet over
                                   and over.

                  ipListCache      Compiled versions of IP lists (used only for
                                   IP-address based authentication.)

                  authCacheSize    Session IDs of successful authentication
                                   attempts (LDAP or external). When expired,
                                   the user will be forced to log in again.

                  loginCache       Security info for external logins, to verify
                                   authentication when user returns from the
                                   external page. If it expires while user is
                                   logging in, they will be forced to try again.

    -->

    <stylesheetCache size="10" expire="0"/>
    <reqParserCache size="300" expire="0"/>
    <ipListCache size="30" expire="0"/>
    <authCache size="1000" expire="1800"/>
    <loginCache size="1000" expire="120"/>


    <!-- =====================================================================
         Tag: <dependencyChecking check="yes/no"/>

         Descrip: Whenever consulting one of its internal caches, the servlet
                  can optionally check if the source file(s) have been changed
                  and if so ignore the cache entry and reload the file(s).
                  This hurts performance slightly, but makes testing and
                  development much easier.

                  Set this to "no" for a production system where every last
                  little bit of speed is critical. Otherwise, leave it "yes".
    -->

    <dependencyChecking check="yes"/>


    <!-- =====================================================================
         Tag:     <stylesheetProfiling profile="yes/no"/>
         
         Descrip: Controls whether a profile is computed for each document
                  request. The profile prints the file name and line number
                  of each XSLT statement that accesses an XML node, ordered
                  by descending count. This gives one a clue where the
                  stylesheet is spending its time and thus could possibly
                  be optimized.
                  
                  Set this to "no" for general use, since computing the 
                  profile is somewhat time-consuming.
    -->
    
    <stylesheetProfiling profile="no"/>


    <!-- =====================================================================
         PASS-THROUGH TAGS

         You may place any other tags you like, and they will be passed as
         parameters to each stylesheet run by the servlet. Thus you can make
         up your own system-wide parameters, put them below, and then every
         stylesheet will be able to access them.

         Examples: <mytag value="foo"/>
                   <othertag value="bar"/>
    -->

    <!-- Put pass-through tags here, if you need any. -->

</dynaXML-config>

